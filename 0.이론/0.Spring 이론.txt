

0. 준비

(0) 설치

help -> marketplace에서 검색 [검색창에 spring]  -> install 클릭 -> 설치 완료

*Spring Tools 3 Add-On for Spring Tools 4 3.9.14.CI를 받을 것

재시작 하기 전에 -> 사용자/ecpolipse/jee-2020-03/eclipse로 가서 eclipse.ini를 들어가서 주의사항을 따른 후
재시작을 한다.


(1)프로젝트 생성 

   Dynamic Webproject를 생성 -> 프로젝트 마우스 오른쪽 버튼 클릭 new -> config 클릭 -> convert to maven 클릭 -> finish

(2) 라이브러리 받기

   https://mvnrepository.com/
   검색창에 spring-context 적고 검색
   소스코드 보기

   오류가 나면 버전을 낮춘다.

(3) lib는 오라클만.

(4) .m2 지우고 다시작동 https://dltjdgur327.tistory.com/26, https://parkpurong.tistory.com/133 참고



1. 이론

   (1) IoC (Inversion of Control)

	어떤 모듈이 사용할 모듈을 스스로 결정하는 것이 아닌 다른 모듈에게 선택권을 넘겨주는 것.


   (2) Dependency Injection

	모듈간의 의존성을 모듈의 외부에서 주입시키는 기능. IoC의 한 종류이다. 

   (3) Non-Ioc 와 Ioc의 차이점	



2. Spring 프레임워크 기능

   (1) DB처리 방식 : 0814_DI 

	1) Spring Container: 객체(Bean)를 생성하고 관리한다. 

	2) Spring Contrainer = BenaFactory = ApplicationContext
	
	3) Spring Contrainer의 정보는 ApplicationContext로 관리한다.

	4) ApplicationContext는 Bean 생성 및 DI, 생명주기를 관리하는  BeanFactory의 기능과
	   Spring AOP, 메시지 리소스 처리, 이벤트 처리 등의 기능을 제공한다.
	
	5) 객체 생성 및 관리를 위해서 Spring Container 설정 정보를 참조한다.

	6) 설정 정보가 기본적으로 xml 또는 java annotation으로 되어 있다.

	   



   (2) Spring Bean Configuration File

	1) new -> other -> spring에서 찾는다.

	2) 객체 생성방법: <bean id="해당객체를 호출하는 이름" class="객체를 생성할 클래스 위치"/>
		
	   * class에 클래스 이름만 치고 spacebar를 치면 해당 클래스의 경로가 나온다.	
	 

	3) 객체는 configuration.xml에서 만든다.


  (3) ApplicationContext [클래스는 org.springframework.context 선택]

	1) Configuration의 정보를 읽는다.

	2) 작성 형식 

	   ApplicationContext [객체이름] 
			= new ClassPathXmlApplicationContext("[경로] / [파일이름].xml");

3. 의존성 주입

   (1) 정의: 생성한 bean에 setter나 beam으로 클래스를 넣어준다. 

	1) setter이용
     
	<bean id="service" class="com.ict.edu02.Service">
		<property name="[연동한 class의 객체]" ref=""></property>
		* ref: 참조하는 것.
 		* value: 직접입력하는 것.	

	</bean>

	2) 생성자 이용

